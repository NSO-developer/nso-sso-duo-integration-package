#!/usr/bin/env python3

import base64, json, logging, os, sys
import ncs, _ncs


logdir = os.getenv("NCS_LOG_DIR")
if logdir is None:
    # fallback local install
    logdir = os.path.join(os.path.dirname(os.path.realpath(__file__)),
                          "../../../../../logs")

logname = os.path.join(logdir, "ncs-python-saml2-auth-challenge.log")
if not os.path.isdir(logdir):
    os.mkdir(logdir)

logfmt = ("%(asctime)s.%(msecs)02d %(filename)s:%(lineno)s"
          " %(levelname)s: %(message)s")
logging.basicConfig(filename=logname, filemode="a+", format=logfmt,
                    datefmt="%Y-%m-%d %H:%M:%S", level=logging.INFO)
logger = logging.getLogger(__name__)



def base64_to_str(b):
    return base64.decodebytes(b.encode("utf-8")).decode("utf-8")

def str_to_base64(s):
    return base64.encodebytes(s.encode("utf-8")).decode("utf-8")

def parse_args(args):
    """
    Parse args and put them in a dict.

    See paragraph at top of file and NSO Package Authentication documentation
    for details.
    """
    a = dict(zip(["challengeid", "response", "srcip", "srcport", "ctx", "proto"],
                 args.strip("[]").split(";")))
    a["challengeid"] = base64_to_str(a["challengeid"])
    a["response"] = base64_to_str(a["response"])

    return a

def main():
    logger.info(f"Trigger Package Challenge")
    """Simple test package chal that echoes your input."""
    l = sys.stdin.readline()
    logger.info(f"echo-chal - line: " + l.replace("\n", ""))
    a = parse_args(l)

    try:
        logger.info(f"echo-chal - ctx: " + a["ctx"])
        if a["ctx"] == "cli":
            logger.info(f"echo-chal - challengeid: " + a["challengeid"])
            logger.info(f"echo-chal - response: " + a["response"])
            packagechal = a["response"]
        else :
            packagechal = "reject 'unknown ctx'"

        logger.info(f"echo-chal - output: {packagechal}")
        print(f"{packagechal}")

    except Exception as e:
        logger.info(f"echo-chal - error: No {e} header")
        print("reject 'access denied'")

if __name__ == "__main__":
    logger.info(f"Trigger Package Challenge1")
    main()
